{"version":3,"sources":["components/ContactForm.js","components/Contacts.js","components/Search.js","services/Persons.js","components/Notification.js","index.js"],"names":["ContactForm","props","onSubmit","formSubmitHandler","value","name","onChange","nameChangeHandler","number","numberChangeHandler","type","Contacts","contactFilter","filter","persons","person","includes","map","key","onClick","contactDeleteHandler","id","Search","filterChangeHandler","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","className","ReactDOM","render","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","notificationMessage","setNotificationMessage","useEffect","personService","initialPersons","catch","error","setTimeout","event","target","preventDefault","length","window","confirm","contact","find","p","changedContact","returnedPerson","alert","concat","document","getElementById"],"mappings":"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","file":"static/js/main.f86d47cc.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ContactForm = props => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={props.formSubmitHandler}>\r\n        <div>\r\n          Name: <input value={props.name} onChange={props.nameChangeHandler} />\r\n        </div>\r\n        <div>\r\n          Number:{\" \"}\r\n          <input value={props.number} onChange={props.numberChangeHandler} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\n\r\nconst Contacts = props => {\r\n  const contacts = contactFilter =>\r\n    props.persons\r\n      .filter(person => person.name.includes(contactFilter))\r\n      .map(person => (\r\n        <p key={person.name}>\r\n          {person.name} {person.number}{\" \"}\r\n          <button onClick={() => props.contactDeleteHandler(person.id)}>\r\n            delete\r\n          </button>\r\n        </p>\r\n      ));\r\n\r\n  return <div>{contacts(props.filter)}</div>;\r\n};\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\n\r\nconst Search = props => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        Search contacts:{\" \"}\r\n        <input\r\n          value={props.filter}\r\n          onChange={props.filterChangeHandler}\r\n        ></input>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst remove = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove\r\n};\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message, type }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className={type}>{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport Contacts from \"./components/Contacts\";\r\nimport Search from \"./components/Search\";\r\nimport personService from \"./services/Persons\";\r\nimport Notification from \"./components/Notification\";\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [notificationMessage, setNotificationMessage] = useState({\r\n    message: null,\r\n    type: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons => setPersons(initialPersons))\r\n      .catch(error => {\r\n        setNotificationMessage({\r\n          message: \"Could not retrieve contacts. Please try again later.\",\r\n          type: \"error\"\r\n        });\r\n        setTimeout(() => {\r\n          setNotificationMessage({ message: null, type: null });\r\n        }, 2000);\r\n      });\r\n  }, []);\r\n\r\n  const addOrUpdateContact = event => {\r\n    event.preventDefault();\r\n    if (persons.filter(person => person.name === newName).length > 0) {\r\n      if (persons.filter(person => person.number !== newNumber).length > 0) {\r\n        if (\r\n          window.confirm(\r\n            `${newName} is already added to phonebook. Would you like to change their contact number to ${newNumber}`\r\n          )\r\n        ) {\r\n          const contact = persons.find(p => p.name === newName);\r\n          const changedContact = { ...contact, number: newNumber };\r\n          personService\r\n            .update(contact.id, changedContact)\r\n            .then(returnedPerson => {\r\n              setNotificationMessage({\r\n                message: `Note '${newName}' has been updated.`,\r\n                type: \"success\"\r\n              });\r\n              setTimeout(() => {\r\n                setNotificationMessage({ message: null, type: null });\r\n              }, 2000);\r\n              setPersons(\r\n                persons.map(p => (p.name !== newName ? p : returnedPerson))\r\n              );\r\n              setNewName(\"\");\r\n              setNewNumber(\"\");\r\n            })\r\n            .catch(error => {\r\n              setNotificationMessage({\r\n                message:\r\n                  \"This contact could not be updated. It may have been removed.\",\r\n                type: \"error\"\r\n              });\r\n              setTimeout(() => {\r\n                setNotificationMessage({ message: null, type: null });\r\n              }, 2000);\r\n            });\r\n        }\r\n      } else {\r\n        window.alert(`${newName} is already added to phonebook.`);\r\n      }\r\n    } else {\r\n      const contactObject = {\r\n        name: newName,\r\n        number: newNumber\r\n      };\r\n      personService\r\n        .create(contactObject)\r\n        .then(returnedPerson => {\r\n          setNotificationMessage({\r\n            message: `${newName} has been added to phonebook.`,\r\n            type: \"success\"\r\n          });\r\n          setTimeout(() => {\r\n            setNotificationMessage({ message: null, type: null });\r\n          }, 2000);\r\n          setPersons(persons.concat(returnedPerson));\r\n          setNewName(\"\");\r\n          setNewNumber(\"\");\r\n        })\r\n        .catch(error => {\r\n          setNotificationMessage({\r\n            message: error.response.data.error,\r\n            type: \"error\"\r\n          });\r\n          setTimeout(() => {\r\n            setNotificationMessage({ message: null, type: null });\r\n          }, 2000);\r\n        });\r\n    }\r\n  };\r\n\r\n  const removeContact = id => {\r\n    if (window.confirm(\"Are you sure you wish to remove this contact?\")) {\r\n      personService\r\n        .remove(id)\r\n        .then(() => {\r\n          setNotificationMessage({\r\n            message: `Contact has been removed.`,\r\n            type: \"success\"\r\n          });\r\n          setTimeout(() => {\r\n            setNotificationMessage({ message: null, type: null });\r\n          }, 2000);\r\n          setPersons(persons.filter(person => person.id !== id));\r\n        })\r\n        .catch(error => {\r\n          setNotificationMessage({\r\n            message: \"This contact could not be deleted\",\r\n            type: \"error\"\r\n          });\r\n          setTimeout(() => {\r\n            setNotificationMessage({ message: null, type: null });\r\n          }, 2000);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleContactChange = event => {\r\n    setNewName(event.target.value);\r\n  };\r\n\r\n  const handleNumberChange = event => {\r\n    setNewNumber(event.target.value);\r\n  };\r\n\r\n  const handleFilterChange = event => {\r\n    setFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      {notificationMessage.message != null ? (\r\n        <Notification\r\n          message={notificationMessage.message}\r\n          type={notificationMessage.type}\r\n        />\r\n      ) : null}\r\n      <Search filter={filter} filterChangeHandler={handleFilterChange} />\r\n      <h2>Add New Contact</h2>\r\n      <ContactForm\r\n        name={newName}\r\n        nameChangeHandler={handleContactChange}\r\n        number={newNumber}\r\n        numberChangeHandler={handleNumberChange}\r\n        formSubmitHandler={addOrUpdateContact}\r\n      />\r\n\r\n      <h2>Numbers</h2>\r\n      <Contacts\r\n        persons={persons}\r\n        filter={filter}\r\n        contactDeleteHandler={removeContact}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}